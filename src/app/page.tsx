'use client';

import { useState, useEffect } from 'react';
import styles from './page.module.css';

type Dictionary = {
  [key: string]: {
    russian: string;
    azerbaijani: string;
  }[];
};

export default function DictionaryApp() {
  const [time, setTime] = useState<string | null>(null); // null —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
  const [bgColor, setBgColor] = useState('#ffffff');
  const [activeCategory, setActiveCategory] = useState<string>('–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è');

  const dictionary: Dictionary = {
    '–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è': [
      { russian: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ', azerbaijani: 'Salam' },
      { russian: '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ', azerbaijani: 'Sabahƒ±nƒ±z xeyir' },
      { russian: '–î–æ–±—Ä—ã–π –¥–µ–Ω—å', azerbaijani: 'G√ºnortanƒ±z xeyir' },
      { russian: '–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä', azerbaijani: 'Ax≈üamƒ±nƒ±z xeyir' },
      { russian: '–ö–∞–∫ –¥–µ–ª–∞?', azerbaijani: 'Nec…ôsiniz?' },
    ],
    '–æ–±—â–µ–Ω–∏–µ': [
      { russian: '–î–∞', azerbaijani: 'B…ôli' },
      { russian: '–ù–µ—Ç', azerbaijani: 'Xeyr' },
      { russian: '–°–ø–∞—Å–∏–±–æ', azerbaijani: 'T…ô≈ü…ôkk√ºr edir…ôm' },
      { russian: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞', azerbaijani: 'Z…ôhm…ôt olmasa' },
      { russian: '–ò–∑–≤–∏–Ω–∏—Ç–µ', azerbaijani: 'Baƒüƒ±≈ülayƒ±n' },
    ],
    '–µ–¥–∞': [
      { russian: '–í–æ–¥–∞', azerbaijani: 'Su' },
      { russian: '–•–ª–µ–±', azerbaijani: '√á√∂r…ôk' },
      { russian: '–ú—è—Å–æ', azerbaijani: '∆èt' },
      { russian: '–†—ã–±–∞', azerbaijani: 'Balƒ±q' },
      { russian: '–û–≤–æ—â–∏', azerbaijani: 'T…ôr…ôv…ôz' },
    ]
  };

  useEffect(() => {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞
    setTime(new Date().toLocaleTimeString());

    const timer = setInterval(() => {
      setTime(new Date().toLocaleTimeString());
    }, 1000);

    return () => clearInterval(timer);
  }, []);

  const changeColor = () => {
    const colors = ['#f0fff0', '#f0f8ff', '#fff0f5', '#f5f5f0'];
    setBgColor(colors[Math.floor(Math.random() * colors.length)]);
  };

  const currentCategory = dictionary[activeCategory] || [];

  return (
    <main className={styles.main} style={{ backgroundColor: bgColor }}>
      <div className={styles.container}>
        <div className={styles.headerDecor}>
          <img src="/images/hat.png" alt="–ö–∞–≤–∫–∞–∑—Å–∫–∞—è –ø–∞–ø–∞—Ö–∞"  className={styles.hat} />
          <h1>–†—É—Å—Å–∫–æ-–∞–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω—Å–∫–∏–π —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–∏–∫</h1>
          <img src="/images/shashlik.gif" alt="–®–∞—à–ª—ã–∫ –Ω–∞ —à–∞–º–ø—É—Ä–µ" className={styles.shashlik} />
        </div>

        {/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∞ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ */}
        {time && <p>–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {time}</p>}

        <div className={styles.buttons}>
          {Object.keys(dictionary).map(category => (
            <button
              key={category}
              className={`${styles.categoryButton} ${activeCategory === category ? styles.active : ''}`}
              onClick={() => setActiveCategory(category)}
            >
              {category}
            </button>
          ))}
        </div>

        <div className={styles.dictionary}>
          {currentCategory.map((item, index) => (
            <div key={index} className={styles.wordCard}>
              <div className={styles.language}>üá∑üá∫ {item.russian}</div>
              <div className={styles.language}>üá¶üáø {item.azerbaijani}</div>
            </div>
          ))}
        </div>

        <button className={styles.colorButton} onClick={changeColor}>
          –°–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç —Ñ–æ–Ω–∞
        </button>
      </div>
    </main>
  );
}
